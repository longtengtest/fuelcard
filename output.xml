<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.7.7 on darwin)" generated="20200911 12:07:43.130" rpa="false">
<suite id="s1" name="Test Add Fuelcard" source="/Users/superhin/龙腾/fuelcard4/testcases/test_add_fuelcard.robot">
<test id="s1-t1" name="测试正常添加加油卡">
<kw name="添加加油卡" library="fuelcard_api">
<arguments>
<arg>hzc_00001</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>cardNumber=${card_number}</arg>
</arguments>
<assign>
<var>&amp;{card_info}</var>
</assign>
<msg timestamp="20200911 12:07:43.248" level="INFO">&amp;{card_info} = { cardNumber=hzc_00001 }</msg>
<status status="PASS" starttime="20200911 12:07:43.247" endtime="20200911 12:07:43.248"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>dataSourceId=${data_source_id}</arg>
<arg>methodId=00A</arg>
<arg>CardInfo=&amp;{card_info}</arg>
</arguments>
<assign>
<var>&amp;{data}</var>
</assign>
<msg timestamp="20200911 12:07:43.248" level="INFO">&amp;{data} = { dataSourceId=bHRz | methodId=00A | CardInfo={'cardNumber': 'hzc_00001'} }</msg>
<status status="PASS" starttime="20200911 12:07:43.248" endtime="20200911 12:07:43.248"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>session</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200911 12:07:43.249" level="INFO">Creating Session using : alias=session, url=http://115.28.108.130:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200911 12:07:43.248" endtime="20200911 12:07:43.249"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>session</arg>
<arg>/gasStation/process</arg>
<arg>json=${data}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20200911 12:07:43.361" level="INFO">POST Request : url=http://115.28.108.130:8080/gasStation/process 
 path_url=/gasStation/process 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '84', 'Content-Type': 'application/json'} 
 body=b'{"dataSourceId": "bHRz", "methodId": "00A", "CardInfo": {"cardNumber": "hzc_00001"}}' 
 </msg>
<msg timestamp="20200911 12:07:43.361" level="INFO">POST Response : url=http://115.28.108.130:8080/gasStation/process 
 status=200, reason=OK 
 body={"code":5000,"msg":"该卡已添加","success":false} 
 </msg>
<msg timestamp="20200911 12:07:43.361" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200911 12:07:43.249" endtime="20200911 12:07:43.361"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.json()}</arg>
</arguments>
<status status="PASS" starttime="20200911 12:07:43.362" endtime="20200911 12:07:43.362"></status>
</kw>
<msg timestamp="20200911 12:07:43.362" level="INFO">${res} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200911 12:07:43.246" endtime="20200911 12:07:43.362"></status>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<doc>Fails if response status code is different than the expected.</doc>
<arguments>
<arg>200</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20200911 12:07:43.362" endtime="20200911 12:07:43.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${res.json()}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20200911 12:07:43.363" level="INFO">${res_dict} = {'code': 5000, 'msg': '该卡已添加', 'success': False}</msg>
<status status="PASS" starttime="20200911 12:07:43.363" endtime="20200911 12:07:43.363"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res_dict['success']}</arg>
</arguments>
<status status="PASS" starttime="20200911 12:07:43.363" endtime="20200911 12:07:43.364"></status>
</kw>
<kw name="数据库检查卡是否存在" library="longtengserver_db">
<arguments>
<arg>hzc_00001</arg>
</arguments>
<assign>
<var>${check_result}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>SELECT cardNumber FROM cardInfo WHERE cardNumber="${card_number}"</arg>
</arguments>
<assign>
<var>${sql}</var>
</assign>
<msg timestamp="20200911 12:07:43.364" level="INFO">${sql} = SELECT cardNumber FROM cardInfo WHERE cardNumber="hzc_00001"</msg>
<status status="PASS" starttime="20200911 12:07:43.364" endtime="20200911 12:07:43.364"></status>
</kw>
<kw name="查询数据库" library="longtengserver_db">
<arguments>
<arg>${sql}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${db_host}',port=3306,user='${db_user}',password='${db_pwd}',db='${db_name}'</arg>
</arguments>
<msg timestamp="20200911 12:07:43.383" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='115.28.108.130',port=3306,user='test',password='abc123456',db='longtengserver')) </msg>
<status status="PASS" starttime="20200911 12:07:43.365" endtime="20200911 12:07:43.450"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>${sql}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200911 12:07:43.450" level="INFO">Executing : Query  |  SELECT cardNumber FROM cardInfo WHERE cardNumber="hzc_00001" </msg>
<msg timestamp="20200911 12:07:43.486" level="INFO">${result} = (('hzc_00001',),)</msg>
<status status="PASS" starttime="20200911 12:07:43.450" endtime="20200911 12:07:43.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20200911 12:07:43.486" endtime="20200911 12:07:43.486"></status>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200911 12:07:43.487" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200911 12:07:43.486" endtime="20200911 12:07:43.487"></status>
</kw>
<msg timestamp="20200911 12:07:43.487" level="INFO">${result} = (('hzc_00001',),)</msg>
<status status="PASS" starttime="20200911 12:07:43.365" endtime="20200911 12:07:43.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${result}</arg>
<arg>True</arg>
<arg>False</arg>
</arguments>
<assign>
<var>${check_result}</var>
</assign>
<msg timestamp="20200911 12:07:43.488" level="INFO">${check_result} = True</msg>
<status status="PASS" starttime="20200911 12:07:43.487" endtime="20200911 12:07:43.488"></status>
</kw>
<msg timestamp="20200911 12:07:43.488" level="INFO">${check_result} = True</msg>
<status status="PASS" starttime="20200911 12:07:43.364" endtime="20200911 12:07:43.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${check_result}</arg>
</arguments>
<status status="PASS" starttime="20200911 12:07:43.488" endtime="20200911 12:07:43.488"></status>
</kw>
<doc>添加新卡并返回添加成功</doc>
<status status="PASS" starttime="20200911 12:07:43.245" endtime="20200911 12:07:43.488" critical="yes"></status>
</test>
<status status="PASS" starttime="20200911 12:07:43.131" endtime="20200911 12:07:43.489"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Test Add Fuelcard">Test Add Fuelcard</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
